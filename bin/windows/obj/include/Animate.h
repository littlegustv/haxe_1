// Generated by Haxe 3.4.7
#ifndef INCLUDED_Animate
#define INCLUDED_Animate

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_Behavior
#include <Behavior.h>
#endif
HX_DECLARE_CLASS0(Animate)
HX_DECLARE_CLASS0(Behavior)
HX_DECLARE_CLASS0(Entity)



class HXCPP_CLASS_ATTRIBUTES Animate_obj : public  ::Behavior_obj
{
	public:
		typedef  ::Behavior_obj super;
		typedef Animate_obj OBJ_;
		Animate_obj();

	public:
		enum { _hx_ClassId = 0x479e0281 };

		void __construct( ::Entity entity,::String sprite,Float speed);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Animate")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Animate"); }
		static hx::ObjectPtr< Animate_obj > __new( ::Entity entity,::String sprite,Float speed);
		static hx::ObjectPtr< Animate_obj > __alloc(hx::Ctx *_hx_ctx, ::Entity entity,::String sprite,Float speed);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Animate_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Animate","\x81","\x02","\x9e","\x47"); }

		int frame;
		int frames;
		Float speed;
		Float time;
		::String sprite;
		void update(Float dt);

		void draw();

};


#endif /* INCLUDED_Animate */ 
