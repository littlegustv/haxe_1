// Generated by Haxe 3.4.7
#ifndef INCLUDED_Entity
#define INCLUDED_Entity

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Behavior)
HX_DECLARE_CLASS0(Entity)



class HXCPP_CLASS_ATTRIBUTES Entity_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Entity_obj OBJ_;
		Entity_obj();

	public:
		enum { _hx_ClassId = 0x39b08743 };

		void __construct(Float x,Float y,::String sprite);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Entity")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Entity"); }
		static hx::ObjectPtr< Entity_obj > __new(Float x,Float y,::String sprite);
		static hx::ObjectPtr< Entity_obj > __alloc(hx::Ctx *_hx_ctx,Float x,Float y,::String sprite);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Entity_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Entity","\x43","\x87","\xb0","\x39"); }

		Float x;
		Float y;
		bool alive;
		::String text;
		::Array< ::Dynamic> behaviors;
		void update(Float dt);
		::Dynamic update_dyn();

		void draw();
		::Dynamic draw_dyn();

};


#endif /* INCLUDED_Entity */ 
