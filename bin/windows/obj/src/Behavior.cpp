// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Behavior
#include <Behavior.h>
#endif
#ifndef INCLUDED_Entity
#include <Entity.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3cde1351273706cc_6_new,"Behavior","new",0x66692ea4,"Behavior.new","Main.hx",6,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_3cde1351273706cc_8_update,"Behavior","update",0xab116a45,"Behavior.update","Main.hx",8,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_3cde1351273706cc_10_draw,"Behavior","draw",0x2f0d4940,"Behavior.draw","Main.hx",10,0x087e5c05)

void Behavior_obj::__construct( ::Entity entity){
            	HX_STACKFRAME(&_hx_pos_3cde1351273706cc_6_new)
HXDLIN(   6)		this->entity = entity;
            	}

Dynamic Behavior_obj::__CreateEmpty() { return new Behavior_obj; }

void *Behavior_obj::_hx_vtable = 0;

Dynamic Behavior_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Behavior_obj > _hx_result = new Behavior_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Behavior_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4a915116;
}

void Behavior_obj::update(Float dt){
            	HX_STACKFRAME(&_hx_pos_3cde1351273706cc_8_update)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Behavior_obj,update,(void))

void Behavior_obj::draw(){
            	HX_STACKFRAME(&_hx_pos_3cde1351273706cc_10_draw)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Behavior_obj,draw,(void))


hx::ObjectPtr< Behavior_obj > Behavior_obj::__new( ::Entity entity) {
	hx::ObjectPtr< Behavior_obj > __this = new Behavior_obj();
	__this->__construct(entity);
	return __this;
}

hx::ObjectPtr< Behavior_obj > Behavior_obj::__alloc(hx::Ctx *_hx_ctx, ::Entity entity) {
	Behavior_obj *__this = (Behavior_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Behavior_obj), true, "Behavior"));
	*(void **)__this = Behavior_obj::_hx_vtable;
	__this->__construct(entity);
	return __this;
}

Behavior_obj::Behavior_obj()
{
}

void Behavior_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Behavior);
	HX_MARK_MEMBER_NAME(entity,"entity");
	HX_MARK_END_CLASS();
}

void Behavior_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(entity,"entity");
}

hx::Val Behavior_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"draw") ) { return hx::Val( draw_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"entity") ) { return hx::Val( entity ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Behavior_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"entity") ) { entity=inValue.Cast<  ::Entity >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Behavior_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("entity","\x23","\x13","\x1c","\x05"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Behavior_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::Entity*/ ,(int)offsetof(Behavior_obj,entity),HX_HCSTRING("entity","\x23","\x13","\x1c","\x05")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Behavior_obj_sStaticStorageInfo = 0;
#endif

static ::String Behavior_obj_sMemberFields[] = {
	HX_HCSTRING("entity","\x23","\x13","\x1c","\x05"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("draw","\x04","\x2c","\x70","\x42"),
	::String(null()) };

static void Behavior_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Behavior_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Behavior_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Behavior_obj::__mClass,"__mClass");
};

#endif

hx::Class Behavior_obj::__mClass;

void Behavior_obj::__register()
{
	hx::Object *dummy = new Behavior_obj;
	Behavior_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Behavior","\xb2","\x4c","\x44","\xe4");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Behavior_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Behavior_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Behavior_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Behavior_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Behavior_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Behavior_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

